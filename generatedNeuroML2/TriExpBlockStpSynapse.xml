<?xml version="1.0" encoding="UTF-8"?>
<Lems xmlns="http://www.neuroml.org/lems/0.7.2"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.neuroml.org/lems/0.7.2">

    <ComponentType description="Blocking synapse with short term plasticity and triexponential basic waveform (one rise time, two decay times)." extends="baseVoltageDepSynapse" name="TriExpBlockStpSynapse">
      <Parameter description="Reversal potential of the synapse" dimension="voltage" name="erev" />
      <Child name="plasticityMechanism" type="basePlasticityMechanism" />
      <Child name="blockMechanism" type="baseBlockMechanism" />

      <EventPort description="Used to relay incoming spikes to child plasticity mechanism" direction="out" name="relay" />
      <Exposure description="Time varying conductance through the synapse" dimension="conductance" name="g" />

      
      
      <Parameter dimension="conductance" name="directAmp1" />
      <Parameter dimension="conductance" name="directAmp2" />
      <Parameter dimension="time" name="directTauRise" />
      <Parameter dimension="time" name="directTauDecay1" />
      <Parameter dimension="time" name="directTauDecay2" />

      <Dynamics>
	<DerivedVariable dimension="none" name="blockFactor" select="blockMechanism/blockFactor" />
	<DerivedVariable dimension="conductance" exposure="g" name="g" value="blockFactor * (directAmp1 * (directB1 - directA1) + directAmp2 * (directB2 - directA2))" />
	<DerivedVariable dimension="current" exposure="i" name="i" value="g * (erev - v)" />

	
	<StateVariable dimension="none" name="directA1" />
	<StateVariable dimension="none" name="directA2" />
	<StateVariable dimension="none" name="directB1" />
	<StateVariable dimension="none" name="directB2" />

	<DerivedVariable dimension="time" name="directPeakTime1" value="(directTauRise * directTauDecay1)/(directTauDecay1 - directTauRise) * ln(directTauDecay1 / directTauRise)" />
	<DerivedVariable dimension="time" name="directPeakTime2" value="(directTauRise * directTauDecay2)/(directTauDecay2 - directTauRise) * ln(directTauDecay2 / directTauRise)" />
	<DerivedVariable dimension="none" name="directFactor1" value="1 / (-exp(-directPeakTime1 / directTauRise) + exp(-directPeakTime1 / directTauDecay1))" />
	<DerivedVariable dimension="none" name="directFactor2" value="1 / (-exp(-directPeakTime2 / directTauRise) + exp(-directPeakTime2 / directTauDecay2))" />

	<TimeDerivative value="-directA1 / directTauRise" variable="directA1" />
	<TimeDerivative value="-directA2 / directTauRise" variable="directA2" />
	<TimeDerivative value="-directB1 / directTauDecay1" variable="directB1" />
	<TimeDerivative value="-directB2 / directTauDecay2" variable="directB2" />

	<DerivedVariable dimension="none" name="directPlasticityFactor" select="plasticityMechanism/plasticityFactor" />

	<OnStart>
	  
	  <StateAssignment value="0" variable="directA1" />
	  <StateAssignment value="0" variable="directA2" />
	  <StateAssignment value="0" variable="directB1" />
	  <StateAssignment value="0" variable="directB2" />
	</OnStart>

	<OnEvent port="in">
	  
	  <StateAssignment value="directA1 + directPlasticityFactor * directFactor1" variable="directA1" />
	  <StateAssignment value="directA2 + directPlasticityFactor * directFactor2" variable="directA2" />
	  <StateAssignment value="directB1 + directPlasticityFactor * directFactor1" variable="directB1" />
	  <StateAssignment value="directB2 + directPlasticityFactor * directFactor2" variable="directB2" />
	  <EventOut port="relay" />
	</OnEvent>

      </Dynamics>
    </ComponentType>

</Lems>
